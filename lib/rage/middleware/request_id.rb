# frozen_string_literal: true

##
# The middleware establishes a connection between the `X-Request-Id` header (typically generated by a firewall, load balancer, or web server) and
# Rage's internal logging system. It ensures that:
#
# 1. All logs produced during the request are tagged with the value submitted in the `X-Request-Id` header.
# 2. The request ID is added back to the response in the `X-Request-Id` header. If no `X-Request-Id` header was provided in the request, the middleware adds an internally generated ID to the response.
#
# Additionally, the `X-Request-Id` header value is sanitized to a maximum of 255 characters, allowing only alphanumeric characters and dashes.
#
# @example
#   Rage.configure do
#     config.middleware.use Rage::RequestId
#   end
#
class Rage::RequestId
  BLACKLISTED_CHARACTERS = /[^\w\-@]/

  def initialize(app)
    @app = app
  end

  def call(env)
    env["rage.request_id"] = validate_external_request_id(env["HTTP_X_REQUEST_ID"])
    response = @app.call(env)
    response[1]["X-Request-Id"] = env["rage.request_id"]

    response
  end

  private

  def validate_external_request_id(request_id)
    if request_id && !request_id.empty?
      request_id = request_id[0...255] if request_id.size > 255
      request_id = request_id.gsub(BLACKLISTED_CHARACTERS, "") if request_id =~ BLACKLISTED_CHARACTERS

      request_id
    end
  end
end
